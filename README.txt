Top level directory tree required for the project to run as intended:

Project
├───apk_dump
├───base_dir
│   ├───train_dir
│   │   ├───akiec
│   │   ├───bcc
│   │   ├───bkl
│   │   ├───df
│   │   ├───mel
│   │   ├───nv
│   │   └───vasc
│   └───val_dir
│       ├───akiec
│       ├───bcc
│       ├───bkl
│       ├───df
│       ├───mel
│       ├───nv
│       └───vasc
├───LesionAppController
├───lesion_scanner_app
├───ModelBuilder
└───model_dump

===============================================================================================================================================================
-Setup-

To keep the project size as lightweight as possible, the dataset required for this project to run is not included within this package.
Please download this from: 
https://www.kaggle.com/kmader/skin-cancer-mnist-ham10000

the dataset should be extraced within the project directory.

Paths:
The current project is setup to run on my personal machine. 
Please change the paths respectively for the following files:

Data_Preprocess.py:
	make sure the "base" variable on line 27 the path string into skin-cancer-mnist-ham10000 directory.

Service.cs (in LesionAppController):
	On line 56 your python executable absolute path is required.
	On line 94 the absolute path to ".\Project\lesion_scanner_app\gradlew.bat" is required.

Machine Learning:
Run the python script: Data_Preprocess.py
This should give you the project direcotry tree shown above.

-Running The Project-

Open up the LesionAppController solution in visual studio.
Run the solution.
This will open up the Hngfire Control Panel from where navigate to recurring jobs. 
Here, you can manually exectue each 'service' and see the result outputted in the console log.

To make testing easier I have rovided you with a model.tflite file.
Traditionally, this will be generated by the machine learning script, however this takes 1 whole day to train.
Therefore, to test the rest of the service, copy and paste the model.tflite into model_dump folder and you can run the entire service.
please keep the model.tflite aside for future tests since the service will destroy the file after compiling the mobile app apk.